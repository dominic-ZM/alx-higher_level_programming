#!/usr/bin/python3

"""Defines a rectangle class based on 0-rectangle.py"""


class Rectangle:
    """Definition of rectangle class"""
    number_of_instances = 0
    def __init__(self, width=0, height=0):
        """called when creating an instance"""
        self.__height = 0
        self.__width = 0
        self.height = height
        self.width = width
        number_of_instances += 1

    def __del__(self):
        """Called when object is destroyed"""
        number_of_instances -= 1
        print("Bye rectangle...")

    @property
    def height(self):
        """Returns the value of height"""
        return self.__height

    @height.setter
    def height(self, value):
        """sets the value of height, after validating it"""
        if not isinstance(value, int):
            raise TypeError("height must be an integer")
        if value < 0:
            raise ValueError("height must be >= 0")
        self.__height = value

    @property
    def width(self):
        """Returns the value of width"""
        return self.__width

    @width.setter
    def width(self, value):
        """sets the value of width, after validating it"""
        if not isinstance(value, int):
            raise TypeError("width must be an integer")
        if value < 0:
            raise ValueError("width must be >= 0")
        self.__width = value

    def area(self):
        """calculates and returns the area of the rectangle"""
        return self.__width * self.__height

    def perimeter(self):
        """Calculates and returns perimeter of rectangle"""
        if self.__height == 0 or self.__width == 0:
            return 0
        return 2 * (self.__height + self.__width)

    def __str__(self):
        """Returns a string representation"""
        if self.__width == 0 or self.__height == 0:
            return ""
        top_side = "#" * self.__width
        sides = "#" * (self.__width - 1) + "#\n"
        rectangle = top_side + "\n" + sides * (self.__height - 2) + top_side
        return rectangle

    def __repr__(self):
        """Returns a string representation that can create a new instance"""
        return f"Rectangle({self.__width}, {self.__height})"
